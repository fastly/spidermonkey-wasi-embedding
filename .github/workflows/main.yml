name: CI
on:
  push:
    branches: [main]
    tags-ignore: [dev]
  pull_request:
    branches: [main]
defaults:
  run:
    shell: bash

jobs:
  build_engine:
    name: Build Engine
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
            mode: release
          - os: ubuntu-latest
            target: linux
            mode: debug
          - os: macos-latest
            target: darwin
            mode: debug
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Cache SpiderMonkey tarball
      uses: actions/cache@v3
      id: sm-cache
      with:
        path: |
          dist
        key: cache-${{ hashFiles(
          'build-engine.sh',
          'gecko-revision',
          'object-files.list'
          ) }}-${{ matrix.target }}

    - name: "Run apt-get update"
      if: matrix.target == 'linux' && steps.sm-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update -y

    - name: "Build SpiderMonkey"
      if: steps.sm-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p dist
        bash ./build-engine.sh ${{ matrix.mode }}
        tar -a -cf dist/spidermonkey-wasm-static-lib_${{ matrix.mode }}_${{ matrix.target }}.tar.gz ${{ matrix.mode }}

    - name: Calculate tag name
      run: |
        name=rev_$GITHUB_SHA
        echo ::set-output name=val::$name
        echo TAG=$name >> $GITHUB_ENV
      id: tagname

    # Upload tarball as an artifact of the github action run, so the output
    # can be inspected for pull requests.
    - name: Upload tarball
      uses: actions/upload-artifact@v3
      if: github.event_name != 'push' || (github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/v'))
      with:
        name: spidermonkey-wasm-static-lib-${{ matrix.target }}.zip
        path: dist/

    # ... and if this was an actual push (tag or `main`) then we publish a
    # new release. This'll automatically publish a tag release or update `dev`
    # with this `sha`
    - run: cd .github/actions/github-release && npm install --production
    - name: Publish Release
      uses: ./.github/actions/github-release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
      with:
        files: "dist/*.tar.gz"
        name: ${{ steps.tagname.outputs.val }}
        token: ${{ secrets.GITHUB_TOKEN }}
